package cert

import (
	"crypto/tls"
	"crypto/x509"

	"github.com/elazarl/goproxy"
)

var CA_CERT = []byte(`-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----`)

var CA_KEY = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----`)

func SetCA() error {
	goproxyCa, err := tls.X509KeyPair(CA_CERT, CA_KEY)
	if err != nil {
		return err
	}
	if goproxyCa.Leaf, err = x509.ParseCertificate(goproxyCa.Certificate[0]); err != nil {
		return err
	}
	goproxy.GoproxyCa = goproxyCa
	goproxy.OkConnect = &goproxy.ConnectAction{Action: goproxy.ConnectAccept, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.MitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.HTTPMitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectHTTPMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.RejectConnect = &goproxy.ConnectAction{Action: goproxy.ConnectReject, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	return nil
}
